{"version":3,"sources":["components/Header.js","components/Footer.js","components/SelectInput.js","components/PlayButton.js","components/Main.js","components/Score.js","components/Timer.js","components/Equation.js","components/NumberButton.js","components/ClearButton.js","helpers/helpers.js","components/Keyboard.js","components/Game.js","containers/App.js","index.js"],"names":["Header","className","type","data-toggle","data-target","id","href","Footer","Date","getFullYear","SelectInput","label","values","currentValue","setCurrentValue","selectOptions","map","value","toString","htmlFor","defaultValue","onChange","e","target","PlayButton","to","Main","props","numbers","number","push","operation","setOperation","maxNumber","setMaxNumber","Score","score","Timer","timeLeft","setTimeLeft","useEffect","timer","setInterval","prevTimeLeft","clearInterval","Equation","question","answer","NumberButton","onClick","handleClick","ClearButton","style","width","randInt","low","high","rndDec","Math","random","floor","Keyboard","setUserAnswer","handleKeyUp","preventDefault","keyCode","prevUserAnswer","substring","length","isNaN","key","String","Number","window","addEventListener","removeEventListener","Game","randNums","getRandNumbers","useState","operands","setOperands","userAnswer","setScore","answered","setAnswered","num1","num2","appendToAnswer","num","operator","numHigh","max","numLow","min","newQuesion","correctAnswer","parseInt","checkAnswer","setTimeout","numberButtons","equationClass","fontSize","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f805c375.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<nav className='navbar navbar-expand-lg navbar-dark'>\r\n\t\t\t\t<button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarText'>\r\n\t\t\t\t\t<span className='navbar-toggler-icon'></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className='collapse navbar-collapse' id='navbarText'>\r\n\t\t\t\t\t<ul className='navbar-nav mr-auto text-left'>\r\n\t\t\t\t\t\t<li className='nav-item active'>\r\n\t\t\t\t\t\t\t<a className='nav-link' href='/'>\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a className='navbar-brand' href='/'>\r\n\t\t\t\t\tMathificent\r\n\t\t\t\t</a>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n\treturn (\r\n\t\t<footer className='navbar fixed-bottom'>\r\n\t\t\t<a href='https://www.webucator.com' className='text-light'>\r\n\t\t\t\tCopyright &copy; {new Date().getFullYear()} Webucator\r\n\t\t\t</a>\r\n\t\t</footer>\r\n\t);\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from 'react';\r\n\r\nfunction SelectInput({ label, id, values, currentValue, setCurrentValue }) {\r\n\tconst selectOptions = values.map((value) => {\r\n\t\treturn (\r\n\t\t\t<option value={value[1]} key={value[0].toString()}>\r\n\t\t\t\t{value[0]}\r\n\t\t\t</option>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<label htmlFor={id} className='col font-weight-bold'>\r\n\t\t\t\t{label}\r\n\t\t\t</label>\r\n\t\t\t<select\r\n\t\t\t\tid={id}\r\n\t\t\t\tdefaultValue={currentValue}\r\n\t\t\t\tonChange={(e) => setCurrentValue(e.target.value)}\r\n\t\t\t\tclassName='col form-control'\r\n\t\t\t>\r\n\t\t\t\t{selectOptions}\r\n\t\t\t</select>\r\n\t\t\t<br />\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default SelectInput;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PlayButton() {\r\n\treturn (\r\n\t\t<Link to='/play' className='btn btn-primary form-control'>\r\n\t\t\tPlay!\r\n\t\t</Link>\r\n\t);\r\n}\r\n\r\nexport default PlayButton;\r\n","import React from 'react';\r\nimport SelectInput from './SelectInput';\r\nimport PlayButton from './PlayButton';\r\nimport './Main.css';\r\n\r\nfunction Main(props) {\r\n\tconst operations = [\r\n\t\t['Addition', '+'],\r\n\t\t['Subtraction', '-'],\r\n\t\t['Multiplication', 'x'],\r\n\t\t['Division', '/'],\r\n\t];\r\n\tconst numbers = [];\r\n\tfor (let number = 2; number <= 100; number++) {\r\n\t\tnumbers.push([number, number]);\r\n\t}\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<h1>Mathificent</h1>\r\n\t\t\t<div className='row mx-1 my-3'>\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\tlabel='Operation'\r\n\t\t\t\t\tid='operation'\r\n\t\t\t\t\tcurrentValue={props.operation}\r\n\t\t\t\t\tsetCurrentValue={props.setOperation}\r\n\t\t\t\t\tvalues={operations}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='row mx-1 my-3'>\r\n\t\t\t\t<SelectInput\r\n\t\t\t\t\tlabel='Maximum Number'\r\n\t\t\t\t\tid='max-number'\r\n\t\t\t\t\tcurrentValue={props.maxNumber}\r\n\t\t\t\t\tsetCurrentValue={props.setMaxNumber}\r\n\t\t\t\t\tvalues={numbers}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='row mx-1 my-3'>\r\n\t\t\t\t<PlayButton />\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","function Score(props) {\r\n\treturn <strong>Score: {props.score}</strong>;\r\n}\r\nexport default Score;\r\n","import { useEffect } from 'react';\r\n\r\nfunction Timer({ timeLeft, setTimeLeft }) {\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetTimeLeft((prevTimeLeft) => prevTimeLeft - 1);\r\n\t\t}, 1000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer); //that's a cleanup function\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []); //second argument empty array so the function runs only when the component mounts and cleanup function runs on unmount\r\n\r\n\t// if (props.timeLeft > 0) {\r\n\t// \tsetTimeout(() => {\r\n\t// \t\tprops.setTimeLeft(props.timeLeft - 1);\r\n\t// \t}, 1000);\r\n\t// }\r\n\treturn <strong>Time: {timeLeft}</strong>;\r\n}\r\n\r\nexport default Timer;\r\n","import { Fragment } from 'react';\r\n\r\nfunction Equation(props) {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='col-5'>{props.question}</div>\r\n\t\t\t<div className='col-2'>=</div>\r\n\t\t\t<div className='col-5'>{props.answer}</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default Equation;\r\n","function NumberButton(props) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName='btn btn-primary'\r\n\t\t\tonClick={() => {\r\n\t\t\t\tprops.handleClick(props.value);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default NumberButton;\r\n","function ClearButton(props) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName='btn btn-primary'\r\n\t\t\tstyle={{ width: '4.2em' }}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tprops.handleClick('');\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\tClear\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default ClearButton;\r\n","export function randInt(low, high) {\r\n\tconst rndDec = Math.random();\r\n\treturn Math.floor(rndDec * (high - low + 1) + low);\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nfunction Keyboard({ setUserAnswer }) {\r\n\tuseEffect(() => {\r\n\t\tconst handleKeyUp = (e) => {\r\n\t\t\te.preventDefault(); //prevent the normal behavior of the key\r\n\t\t\tif (e.keyCode === 32 || e.keyCode === 13) {\r\n\t\t\t\t//space||enter\r\n\t\t\t\tsetUserAnswer('');\r\n\t\t\t} else if (e.keyCode === 8) {\r\n\t\t\t\t//backspace\r\n\t\t\t\tsetUserAnswer((prevUserAnswer) => prevUserAnswer.substring(0, prevUserAnswer.length - 1));\r\n\t\t\t} else if (!isNaN(e.key)) {\r\n\t\t\t\t// Number() will remove leading zeroes\r\n\t\t\t\tsetUserAnswer((prevUserAnswer) => String(Number(prevUserAnswer + e.key)));\r\n\t\t\t}\r\n\t\t};\r\n\t\twindow.addEventListener('keyup', handleKeyUp);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keyup', handleKeyUp); //cleanup\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []); // will run only on mounting\r\n\r\n\treturn null; // This component doesn't output anything\r\n}\r\n\r\nexport default Keyboard;\r\n","import React, { useState } from 'react';\r\nimport Score from './Score';\r\nimport Timer from './Timer';\r\nimport Equation from './Equation';\r\nimport NumberButton from './NumberButton';\r\nimport ClearButton from './ClearButton';\r\nimport './Game.css';\r\nimport { randInt } from '../helpers/helpers';\r\nimport { Link } from 'react-router-dom';\r\nimport Keyboard from './Keyboard';\r\n\r\nfunction Game({ operation, maxNumber }) {\r\n\tlet randNums = getRandNumbers(operation, 0, maxNumber);\r\n\tconst [operands, setOperands] = useState(randNums);\r\n\tconst [userAnswer, setUserAnswer] = useState('');\r\n\tconst [score, setScore] = useState(0);\r\n\tconst gameLength = 60;\r\n\tconst [timeLeft, setTimeLeft] = useState(gameLength);\r\n\tconst [answered, setAnswered] = useState(false);\r\n\tconst question = `${operands.num1} ${operation} ${operands.num2}`;\r\n\r\n\tfunction appendToAnswer(num) {\r\n\t\tsetUserAnswer(String(Number(userAnswer + num)));\r\n\t}\r\n\r\n\tfunction getRandNumbers(operator, low, high) {\r\n\t\tlet num1 = randInt(low, high);\r\n\t\tlet num2 = randInt(low, high);\r\n\t\tconst numHigh = Math.max(num1, num2);\r\n\t\tconst numLow = Math.min(num1, num2);\r\n\t\tif (operator === '-') {\r\n\t\t\t// Make sure higher num comes first\r\n\t\t\tnum1 = numHigh;\r\n\t\t\tnum2 = numLow;\r\n\t\t}\r\n\t\tif (operator === '/') {\r\n\t\t\tif (num2 === 0) {\r\n\t\t\t\t// No division by zero\r\n\t\t\t\tnum2 = randInt(1, high);\r\n\t\t\t}\r\n\t\t\tnum1 = num1 * num2; // product\r\n\t\t}\r\n\t\treturn { num1, num2 };\r\n\t}\r\n\r\n\tfunction checkAnswer(userAnswer) {\r\n\t\tif (isNaN(userAnswer)) return false; // User hasn't answered\r\n\t\tlet correctAnswer;\r\n\t\tswitch (operation) {\r\n\t\t\tcase '+':\r\n\t\t\t\tcorrectAnswer = operands.num1 + operands.num2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '-':\r\n\t\t\t\tcorrectAnswer = operands.num1 - operands.num2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'x':\r\n\t\t\t\tcorrectAnswer = operands.num1 * operands.num2;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t// division\r\n\t\t\t\tcorrectAnswer = operands.num1 / operands.num2;\r\n\t\t}\r\n\t\treturn parseInt(userAnswer) === correctAnswer;\r\n\t}\r\n\tif (!answered && checkAnswer(userAnswer)) {\r\n\t\tsetAnswered(true);\r\n\t\tsetScore(score + 1);\r\n\t\tsetTimeout(newQuesion, 300);\r\n\t}\r\n\r\n\tfunction newQuesion() {\r\n\t\tsetUserAnswer('');\r\n\t\tsetAnswered(false);\r\n\t\trandNums = getRandNumbers(operation, 0, maxNumber);\r\n\t\tsetOperands(randNums);\r\n\t}\r\n\r\n\tfunction restart() {\r\n\t\tsetTimeLeft(gameLength);\r\n\t\tsetScore(0);\r\n\t\tnewQuesion();\r\n\t}\r\n\r\n\tconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\n\tconst numberButtons = numbers.map((number) => {\r\n\t\treturn <NumberButton value={number} key={number} handleClick={appendToAnswer} />;\r\n\t});\r\n\tconst equationClass = answered ? 'row my-2 text-primary fade' : 'row my-2 text-secondary';\r\n\r\n\tif (timeLeft === 0) {\r\n\t\treturn (\r\n\t\t\t<div className='text-center' id='game-container'>\r\n\t\t\t\t<h2>Time's Up!</h2>\r\n\t\t\t\t<strong style={{ fontSize: '1.5em' }}>You Answered</strong>\r\n\t\t\t\t<div style={{ fontSize: '5em' }}>{score}</div>\r\n\t\t\t\t<strong style={{ fontSize: '1.5em' }}>Questions Correctly</strong>\r\n\t\t\t\t<button className='btn btn-primary form-control m-1' onClick={restart}>\r\n\t\t\t\t\tPlay Again with Same Settings\r\n\t\t\t\t</button>\r\n\t\t\t\t<Link className='btn btn-secondary form-control m-1' to='/'>\r\n\t\t\t\t\tChange Settings\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className='text-center' id='game-container'>\r\n\t\t\t<div className='row border-bottom' style={{ fontSize: '1.5em' }}>\r\n\t\t\t\t<div className='col px-3 text-left'>\r\n\t\t\t\t\t<Score score={score} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col px-3 text-right'>\r\n\t\t\t\t\t<Timer timeLeft={timeLeft} setTimeLeft={setTimeLeft} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={equationClass} id='equation'>\r\n\t\t\t\t<Equation question={question} answer={userAnswer} />\r\n\t\t\t</div>\r\n\t\t\t<div className='row' id='buttons'>\r\n\t\t\t\t<div className='col'>\r\n\t\t\t\t\t{numberButtons}\r\n\t\t\t\t\t<ClearButton handleClick={setUserAnswer} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Keyboard setUserAnswer={setUserAnswer} />\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Game;\r\n","import './App.css';\nimport { useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport Game from '../components/Game';\n\nfunction App() {\n\tconst [operation, setOperation] = useState('+');\n\tconst [maxNumber, setMaxNumber] = useState(10);\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath='/'\n\t\t\t\tcomponent={() => (\n\t\t\t\t\t<Main operation={operation} setOperation={setOperation} maxNumber={maxNumber} setMaxNumber={setMaxNumber} />\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<Route path='/play' component={() => <Game operation={operation} maxNumber={maxNumber} />} />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport { BrowserRouter } from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}